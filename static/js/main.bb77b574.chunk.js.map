{"version":3,"sources":["store.js","actionTypes.js","Salary.js","actions.js","Income.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["calculateSalaryIncome","salary","income","i","perDaySalary","calculateFamilyBenefitIncome","daysOfBenefit","Math","floor","first56Days","incomePerDay","calculateIncome","salaryIncome","familyBenefitIncome","initialState","cumulativeIncome","createStore","state","arguments","length","undefined","action","console","log","type","payload","Salary","WithTooltip","createSliderWithTooltip","Slider","currencyFormatter","Intl","NumberFormat","style","currency","maximumSignificantDigits","react_default","a","createElement","Fragment","min","max","step","defaultValue","this","props","tipFormatter","value","format","onChange","setSalary","Component","connect","Income","options","title","series","name","data","highcharts_react_min_default","highcharts","Highcharts","App","className","src_Salary","src_Income","Boolean","window","location","hostname","match","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bb77b574.chunk.js","sourcesContent":["import { SALARY_UPDATED } from \"./actionTypes\";\n\nimport { createStore } from \"redux\";\n\nconst NUMBER_OF_DAYS = 180;\n\nconst calculateSalaryIncome = salary => {\n  const income = [];\n\n  for (var i = 0;i < NUMBER_OF_DAYS;i++) {\n    const perDaySalary = salary / 220;\n\n    if (i === 0) {\n      income[i] = perDaySalary;\n    } else {\n      income[i] = perDaySalary + income[i - 1];\n    }\n  }\n\n  return income;\n};\n\nconst calculateFamilyBenefitIncome = salary => {\n  const daysOfBenefit = Math.floor(105 / 6 * 7);\n\n  const income = [];\n\n  // Days in KELA parlance are the non-sunday\n  const first56Days = Math.floor(56 / 6 * 7);\n\n  var i = 0;\n  for (;i < first56Days;i++) {\n    var incomePerDay = 27.86 / 6 * 7;\n\n    if (salary >= 9289 && salary <= 58252) {\n      incomePerDay = (0.9 * salary / 300) / 6 * 7;\n    } else if (salary > 58252) {\n      incomePerDay = (174.76 + 0.325 * (salary - 58252) / 300) / 6 * 7;\n    }\n\n    if (i === 0) {\n      income[i] = incomePerDay;\n    } else {\n      income[i] = incomePerDay + income[i - 1];\n    }\n  }\n\n\n  for (;i < daysOfBenefit;i++) {\n    var incomePerDay = 27.86 / 6 * 7;\n\n    if (salary >= 11942 && salary <= 37861) {\n      incomePerDay = (0.7 * salary / 300) / 6 * 7;\n    } else if (salary >= 37862 && salary <= 58252) {\n      incomePerDay= (88.34 + 0.40 * (salary - 37861) / 300) / 6 * 7;\n    } else if (salary > 58252) {\n      incomePerDay = (115.53 + 0.25 * (salary - 58252) / 300) / 6 * 7;\n    }\n\n    if (i === 0) {\n      income[i] = incomePerDay;\n    } else {\n      income[i] = incomePerDay + income[i - 1];\n    }\n  }\n\n  return income;\n};\n\nconst calculateIncome = salary => ({\n  salaryIncome: calculateSalaryIncome(salary),\n  familyBenefitIncome: calculateFamilyBenefitIncome(salary),\n})\n\nconst initialState = {\n  salary: 20000,\n  cumulativeIncome: calculateIncome(20000),\n};\n\nexport default createStore((state = initialState, action) => {\n  console.log(\"BAR\")\n  switch (action.type) {\n    case SALARY_UPDATED:\n      console.log(\"FOO\", action.payload.salary)\n      return {\n        salary: action.payload.salary,\n        cumulativeIncome: calculateIncome(action.payload.salary)\n      };\n    default:\n      return state;\n  }\n});\n","export const SALARY_UPDATED = \"SALARY_UPDATED\";\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport { setSalary } from \"./actions\";\n\nclass Salary extends Component {\n  render() {\n    const createSliderWithTooltip = Slider.createSliderWithTooltip;\n    const WithTooltip = createSliderWithTooltip(Slider);\n\n    const currencyFormatter = new Intl.NumberFormat('fi-FI', {\n      style: 'currency',\n      currency: 'EUR',\n      maximumSignificantDigits: 2\n    });\n\n    return (\n      <>\n        <WithTooltip\n          min={0}\n          max={100000}\n          step={1000}\n          defaultValue={this.props.salary}\n          tipFormatter={value => currencyFormatter.format(value)}\n          onChange={this.props.setSalary} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({ salary: state.salary });\n};\n\nexport default connect(\n  mapStateToProps,\n  { setSalary }\n)(Salary);\n","import { SALARY_UPDATED } from \"./actionTypes\";\n\nexport const setSalary = salary => ({\n  type: SALARY_UPDATED,\n  payload: { salary }\n});\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nclass Income extends Component {\n  render() {\n    const options = {\n      title: \"FOOBAR\",\n      series: [\n        {\n          name: \"Työtulo\",\n          data: this.props.salaryIncome\n        },\n        {\n          name: \"Äitiysraha\",\n          data: this.props.familyBenefitIncome\n        }\n      ]\n    }\n\n    return (\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => state.cumulativeIncome;\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Income);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Salary from './Salary';\nimport Income from './Income';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Salary />\n        <Income />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}