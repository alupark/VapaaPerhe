{"version":3,"sources":["store.js","actionTypes.js","Salary.js","actions.js","Income.js","TargetSelector.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["calculateSalaryIncome","target","salary","income","i","perDaySalary","calculateFamilyBenefitIncome","daysOfBenefit","Math","floor","salaryMe","first56Days","incomePerDay","salaryIncomeThey","calculateIncome","salaryIncome","familyBenefitIncome","me","they","initialState","preBaby","cumulativeIncome","createStore","state","arguments","length","undefined","action","console","log","type","salaryUpdate","Object","objectSpread","defineProperty","payload","Salary","_this","this","WithTooltip","createSliderWithTooltip","Slider","currencyFormatter","Intl","NumberFormat","style","currency","maximumSignificantDigits","react_default","a","createElement","Fragment","props","min","max","step","defaultValue","tipFormatter","value","format","onChange","v","setSalary","Component","connect","Income","options","xAxis","plotLines","color","dashStyle","width","label","text","align","textAlign","rotation","verticalAlign","x","y","fontSize","series","name","data","highcharts_react_min_default","highcharts","Highcharts","TargetSelector","onClick","setTarget","className","concat","App","src_Salary","src_TargetSelector_0","src_Income","Boolean","window","location","hostname","match","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.cbd99848.chunk.js","sourcesContent":["import { SALARY_UPDATED, TARGET_UPDATED } from \"./actionTypes\";\n\nimport { createStore } from \"redux\";\n\nconst NUMBER_OF_DAYS = 180;\n\nconst calculateSalaryIncome = (target, salary) => {\n  const income = [];\n\n  for (var i = 0;i < NUMBER_OF_DAYS;i++) {\n    let perDaySalary = 0;\n\n    if (target === 'me') {\n      perDaySalary = salary['me'] / 365;\n    } else if (target === 'they') {\n      perDaySalary = salary['they'] / 365;\n    } else {\n      perDaySalary = (salary['me'] + salary['they']) / 365;\n    }\n\n    if (i === 0) {\n      income[i] = perDaySalary;\n    } else {\n      income[i] = perDaySalary + income[i - 1];\n    }\n  }\n\n  return income;\n};\n\nconst calculateFamilyBenefitIncome = (target, salary) => {\n  const daysOfBenefit = Math.floor(105 / 6 * 7);\n\n  const income = [];\n\n  if (target !== 'they') {\n    const salaryMe = salary['me'];\n\n    // Days in KELA parlance are the non-sunday\n    const first56Days = Math.floor(56 / 6 * 7);\n\n    var i = 0;\n    for (;i < first56Days;i++) {\n      var incomePerDay = 27.86 / 6 * 7;\n\n      if (salaryMe >= 9289 && salaryMe <= 58252) {\n        incomePerDay = (0.9 * salaryMe / 300) / 6 * 7;\n      } else if (salaryMe > 58252) {\n        incomePerDay = (174.76 + 0.325 * (salaryMe - 58252) / 300) / 6 * 7;\n      }\n\n      if (i === 0) {\n        income[i] = incomePerDay;\n      } else {\n        income[i] = incomePerDay + income[i - 1];\n      }\n    }\n\n\n    for (;i < daysOfBenefit;i++) {\n      var incomePerDay = 27.86 / 6 * 7;\n\n      if (salaryMe >= 11942 && salaryMe <= 37861) {\n        incomePerDay = (0.7 * salaryMe / 300) / 6 * 7;\n      } else if (salaryMe >= 37862 && salaryMe <= 58252) {\n        incomePerDay= (88.34 + 0.40 * (salaryMe - 37861) / 300) / 6 * 7;\n      } else if (salaryMe > 58252) {\n        incomePerDay = (115.53 + 0.25 * (salaryMe - 58252) / 300) / 6 * 7;\n      }\n\n      if (i === 0) {\n        income[i] = incomePerDay;\n      } else {\n        income[i] = incomePerDay + income[i - 1];\n      }\n    }\n  }\n\n  if (target === 'both') {\n    const salaryIncomeThey = calculateSalaryIncome('they', salary);\n\n    for (let i = 0;i < daysOfBenefit;i++) {\n      income[i] = income[i] + salaryIncomeThey[i];\n    }\n  }\n\n  return income;\n};\n\nconst calculateIncome = (target, salary) => ({\n  salaryIncome: calculateSalaryIncome(target, salary),\n  familyBenefitIncome: calculateFamilyBenefitIncome(target, salary),\n})\n\nconst salary = {\n  me: 40000,\n  they: 40000\n};\n\nconst initialState = {\n  salary,\n  preBaby: 42,\n  target: 'both',\n  cumulativeIncome: calculateIncome('both', salary),\n};\n\nexport default createStore((state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case SALARY_UPDATED:\n      const salaryUpdate = {\n        ...state.salary,\n        [action.payload.target]: action.payload.salary\n      };\n\n      return {\n        ...state,\n        salary: salaryUpdate,\n        cumulativeIncome: calculateIncome(state.target, salaryUpdate)\n      };\n    case TARGET_UPDATED:\n      return {\n        ...state,\n        target: action.payload.target,\n        cumulativeIncome: calculateIncome(action.payload.target, state.salary)\n      }\n    default:\n      return state;\n  }\n});\n","export const SALARY_UPDATED = \"SALARY_UPDATED\";\nexport const TARGET_UPDATED = \"TARGET_UPDATED\";\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport { setSalary } from \"./actions\";\n\nclass Salary extends Component {\n  render() {\n    const createSliderWithTooltip = Slider.createSliderWithTooltip;\n    const WithTooltip = createSliderWithTooltip(Slider);\n\n    const currencyFormatter = new Intl.NumberFormat('fi-FI', {\n      style: 'currency',\n      currency: 'EUR',\n      maximumSignificantDigits: 2\n    });\n\n    return (\n      <>\n        {this.props.salary[this.props.target]} €\n        <WithTooltip\n          min={0}\n          max={100000}\n          step={1000}\n          defaultValue={this.props.salary[this.props.target]}\n          tipFormatter={value => currencyFormatter.format(value)}\n          onChange={v => this.props.setSalary(this.props.target, v)} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({ salary: state.salary });\n};\n\nexport default connect(\n  mapStateToProps,\n  { setSalary }\n)(Salary);\n","import { SALARY_UPDATED, TARGET_UPDATED } from \"./actionTypes\";\n\nexport const setSalary = (target, salary) => ({\n  type: SALARY_UPDATED,\n  payload: { target, salary }\n});\n\nexport const setTarget = (target) => ({\n  type: TARGET_UPDATED,\n  payload: { target }\n});\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nclass Income extends Component {\n  render() {\n    const options = {\n      xAxis: {\n        plotLines: [{\n          color: 'red',\n          dashStyle: 'ShortDot',\n          value: this.props.preBaby,\n          width: 1,\n          label: {\n            text: '👶',\n            align: 'left',\n            textAlign: 'center',\n            rotation: '0',\n            verticalAlign: 'top',\n            x: -1,\n            y: 35,\n            style: {\n              fontSize: '300%'\n            }\n          },\n        }]\n      },\n      series: [\n        {\n          name: \"Vain työtulo\",\n          data: this.props.cumulativeIncome.salaryIncome\n        },\n        {\n          name: \"Vapaa perhe\",\n          data: this.props.cumulativeIncome.familyBenefitIncome\n        }\n      ]\n    }\n\n    return (\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cumulativeIncome: state.cumulativeIncome,\n  preBaby: state.preBaby\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Income);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport './TargetSelector.css';\n\nimport { setTarget } from \"./actions\";\n\nclass TargetSelector extends Component {\n  render() {\n    return (\n      <>\n        <button onClick={() => this.props.setTarget('me')} className={`target-selector ${this.props.target === 'me' ? 'target-selector__selected' : ''}`}>Minä</button>\n        <button onClick={() => this.props.setTarget('both')} className={`target-selector ${this.props.target === 'both' ? 'target-selector__selected' : ''}`}>Yhdessä ❤️</button>\n        <button onClick={() => this.props.setTarget('they')} className={`target-selector ${this.props.target === 'they' ? 'target-selector__selected' : ''}`}>Hän</button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({ target: state.target });\n};\n\nexport default connect(\n  mapStateToProps,\n  { setTarget }\n)(TargetSelector);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Salary from './Salary';\nimport Income from './Income';\nimport TargetSelector from './TargetSelector';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>Vapaa perhe</h1>\n        <div>\n          <h2>Minä</h2>\n          <Salary target=\"me\" />\n        </div>\n        <div>\n          <h2>Hän</h2>\n          <Salary target=\"they\" />\n        </div>\n        <div>\n          <h2>Tulot</h2>\n          <TargetSelector />\n          <Income />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}